//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClientApp.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/sum", ReplyAction="http://tempuri.org/ICalculator/sumResponse")]
        int sum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/sum", ReplyAction="http://tempuri.org/ICalculator/sumResponse")]
        System.Threading.Tasks.Task<int> sumAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/sub", ReplyAction="http://tempuri.org/ICalculator/subResponse")]
        int sub(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/sub", ReplyAction="http://tempuri.org/ICalculator/subResponse")]
        System.Threading.Tasks.Task<int> subAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/multiple", ReplyAction="http://tempuri.org/ICalculator/multipleResponse")]
        int multiple(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/multiple", ReplyAction="http://tempuri.org/ICalculator/multipleResponse")]
        System.Threading.Tasks.Task<int> multipleAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/divide", ReplyAction="http://tempuri.org/ICalculator/divideResponse")]
        int divide(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/divide", ReplyAction="http://tempuri.org/ICalculator/divideResponse")]
        System.Threading.Tasks.Task<int> divideAsync(int x, int y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : WCFClientApp.ServiceReference1.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<WCFClientApp.ServiceReference1.ICalculator>, WCFClientApp.ServiceReference1.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int sum(int x, int y) {
            return base.Channel.sum(x, y);
        }
        
        public System.Threading.Tasks.Task<int> sumAsync(int x, int y) {
            return base.Channel.sumAsync(x, y);
        }
        
        public int sub(int x, int y) {
            return base.Channel.sub(x, y);
        }
        
        public System.Threading.Tasks.Task<int> subAsync(int x, int y) {
            return base.Channel.subAsync(x, y);
        }
        
        public int multiple(int x, int y) {
            return base.Channel.multiple(x, y);
        }
        
        public System.Threading.Tasks.Task<int> multipleAsync(int x, int y) {
            return base.Channel.multipleAsync(x, y);
        }
        
        public int divide(int x, int y) {
            return base.Channel.divide(x, y);
        }
        
        public System.Threading.Tasks.Task<int> divideAsync(int x, int y) {
            return base.Channel.divideAsync(x, y);
        }
    }
}
